[{"path":"https://birdnet-team.github.io/birdnetTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 birdnetTools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Get started with birdnetTools","text":"birdnetTools R package designed streamline post-processing validation output BirdNET, open-source neural network developed Cornell Lab Ornithology Chemnitz University Technology detecting identifying bird sounds. goal birdnetTools help researchers manage, explore, validate BirdNET results, can derived BirdNET Analyzer, birdnetR package. includes functions filtering detections species, confidence, date/time; visualizing temporal patterns; validating detections interactive Shiny app support threshold-setting workflows. Make diagram workflow users can use package :)","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"data-import","dir":"Articles","previous_headings":"","what":"Data Import","title":"Get started with birdnetTools","text":"BirdNET detections can imported various formats depending data processed saved. birdnetTools package supports three main workflows: importing multiple detection files separate audio recordings, importing single file containing combined results, using detection results already loaded R.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"example-dataset","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Example dataset","title":"Get started with birdnetTools","text":"demonstrate functions birdnetTools work, use built-dataset example_jprf_2023. dataset contains BirdNET detections recorded John Prince Research Forest British Columbia, Canada, continuous 24-hour period May–June 2023, 5 ARU locations. recordings processed using BirdNET GUI (model v2.4) confidence threshold 0.1. dataset contains 392,300 rows 14 columns, including information file path, start end times detections, species names, confidence scores.","code":"# load the dataset data <- example_jprf_2023  # view the dataset documentation ?example_jprf_2023"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"filtering-data-with-customized-criteria","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Filtering data with customized criteria","title":"Get started with birdnetTools","text":"cases, researchers don’t work directly full set raw BirdNET detections. Instead, may interested filtering specific specie(s), applying confidence threshold, narrowing dataset date, selecting recordings certain hours day. birdnet_filter() function makes easy apply filters single step: birdnet_filter() function allows filter BirdNET detections based variety criteria, including species, confidence threshold, year, date range, hour day. species argument specified using common names, either single character string vector names. threshold argument accepts either numeric value (universal threshold) data frame containing common_name threshold columns (species-specific thresholds); detections confidence scores specified threshold excluded. year hour arguments can also given single values vectors. applying filters using birdnet_filter(), function automatically records filtering criteria data’s attributes. makes easy keep track dataset processed: can also choose use individual filtering functions. include filters species, threshold, year, date range, hour. birdnet_filter() function serves convenient wrapper combines helper functions.","code":"# apply filter data_filtered <- birdnet_filter(data,                                 species = \"Swainson's Thrush\",                                 threshold = 0.2,                                 year = 2023,                                 min_date = \"2023-05-01\",                                 max_date = \"2023-06-30\",                                 hour = c(0:23) )  # view function documentation ?birdnet_filter() attr(data_filtered, \"filter_log\") #> $species #> [1] \"Swainson's Thrush\" #>  #> $threshold #> [1] 0.2 #>  #> $year #> [1] 2023 #>  #> $min_date #> [1] \"2023-05-01\" #>  #> $max_date #> [1] \"2023-06-30\" #>  #> $hour #>  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # detection for kinglets data_kinglet <- birdnet_filter_species(   data,    c(\"Golden-crowned Kinglet\", \"Ruby-crowned Kinglet\")   ) # detection with confidence above 0.85 data_0.85 <- birdnet_filter_threshold(data, 0.85) # detection in 2023 data_2023 <- birdnet_filter_year(data, 2023) # detection on May 2023 data_may <- birdnet_filter_date_range(data,                                        min_date = \"2023-05-01\",                                        max_date = \"2023-05-31\") # detection in the morning (4am to 7am) data_morning <- birdnet_filter_hour(data, c(4:7))"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"visualizing-rawfiltered-data","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Visualizing raw/filtered data","title":"Get started with birdnetTools","text":"Visualization easiest way quickly examine data, identify obvious outliers, assess detection distributions, observe patterns. birdnet_heatmap() function provides type visualization can used either raw filtered data. example activity pattern Swainson’s Thrushe across breeding season (across 5 ARU sites).  Note: visualize raw data (filtering species site), detections grouped across species locations — interpret caution.","code":"birdnet_heatmap(data_filtered)"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"add-columns-for-date-and-time","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Add columns for date and time","title":"Get started with birdnetTools","text":"Often, necessary datetime information associated detections know exactly detections made (.e., bird singing). birdnet_add_datetime() adds datetime information data. function requires original dataset include datetime details within file path column. scans file path datetime patterns extracts date (year, month, day) time (hour, minute).","code":"# add datetime information to the filtered data data_with_datetime <- birdnet_add_datetime(data_filtered)  # show which new columns were added new_columns <- setdiff(colnames(data_with_datetime), colnames(data_filtered)) new_columns #> [1] \"datetime\" \"date\"     \"year\"     \"month\"    \"mday\"     \"yday\"     \"hour\"     #> [8] \"minute\""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"validating-detections-getting-thresholds","dir":"Articles","previous_headings":"","what":"Validating Detections & Getting Thresholds","title":"Get started with birdnetTools","text":"BirdNET detection includes “confidence” score, score reflect true probability varies meaning across species. example, BirdNET may detect one species reliably even low confidence, another may still yield false positives high confidence. improve reliability, ’s recommended use species-specific thresholds. section follows methods outlined Tseng et al. 2025, require validation process subset detections reviewed human experts classify true false positives. context interpreting confidence scores, see Wood Kahl 2024.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"get-a-validation-set-by-subsampling","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"1. Get a validation set by subsampling","title":"Get started with birdnetTools","text":"get species-specific threshold, need validate detections data_filtered, contains Swainson’s Thrush detections filtered 0.2 confidence threshold. First, need subsample portion manual review. birdnet_subsample() function supports three sampling methods: stratified (evenly across confidence levels), random (selection based confidence score distribution), top (highest confidence detections). stratified random approaches help create representative validation set, top sampling targets confident predictions. Optionally, can save subsampled detections .csv file working directory setting save_to_file = TRUE specifying file name:","code":"# subsample 300 detections from the filtered data set.seed(123)  # for reproducibility data_subsampled <- birdnet_subsample(data_filtered,                                      n = 300,                                      method = \"stratified\")  # view function documentation ?birdnet_subsample() birdnet_subsample(   data_filtered,   n = 300,   method = \"stratified\",   save_to_file = TRUE, # whether to save the subsample to a file   file = \"swainsons_thrush_validation.csv\" # name of the file )"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"validation-using-shinyapp","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"2. Validation using shinyApp","title":"Get started with birdnetTools","text":"Manually validating detections, locating audio files, finding timestamps, listening clips, can slow tedious. birdnet_launch_validation() function streamlines process launching Shiny app displays subsampled detections alongside spectrograms corresponding audio clips. interactive interface, users can quickly review detection listening audio viewing spectrograms edit validation datasheet, making validation process much efficient. running code , Shiny interface launch. app requires two inputs: Detection file (.csv) – file containing BirdNET predictions selected validation. Audio folder path – directory corresponding audio clips stored. loaded: top panel display table detections. Clicking “Spectrogram” show corresponding visual signal ; clicking “Audio” play relevant clip. validate, double-click U (Unknown) cell validation column. Enter 1 true positive 0 false positive. input update original .csv file. finished, click “Save” export results. new file created _validation appended original name. complete part validation, file can later reloaded resume process. “Settings” tab lets tweak spectrogram display options. ’re getting tired, try “Praise ” button quick boost motivation. 🌟","code":"birdnet_launch_validation()"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"get-threshold","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"3. Get threshold","title":"Get started with birdnetTools","text":"set BirdNET detections validated (.e., manually labeled true false positives), can calculate species-specific confidence threshold meets desired level precision. birdnet_calc_threshold() function helps identify minimum confidence score required achieve target precision given species. takes one line code calculate species-specific thresholds using birdnet_calc_threshold() function. function requires data frame containing columns common_name, confidence, validation (validation 1 true positives 0 false positives). returns minimum confidence score needed achieve specified precision probability level. details difference precision probability arguments, please see function documentation (?birdnet_calc_threshold()). Note: demonstrate function, use simulated validation dataset included package. dataset mimics real validation file might look like, derived actual expert-reviewed audio.","code":"# simulate validation as a Bernoulli trial data_subsampled$validation <- rbinom(   n = nrow(data_subsampled),    size = 1,    prob = pmin(pmax(data_subsampled$confidence, 0), 1) ) birdnet_calc_threshold(data_subsampled,                        precision = 0.9) #> ℹ Processing species: Swainson's Thrush #> ✔ Thresholds calculated to achieve 0.9 precision. #> # A tibble: 1 × 2 #>   common_name       threshold #>   <chr>                 <dbl> #> 1 Swainson's Thrush     0.917"},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sunny Tseng. Author, maintainer.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tseng S (2025). birdnetTools: R package working BirdNET output. R package version 0.0.0.9000, https://birdnet-team.github.io/birdnetTools/.","code":"@Manual{,   title = {birdnetTools: R package for working with BirdNET output},   author = {Sunny Tseng},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://birdnet-team.github.io/birdnetTools/}, }"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"birdnettools","dir":"","previous_headings":"","what":"R package for working with BirdNET output","title":"R package for working with BirdNET output","text":"birdnetTools R package designed streamline post-processing validation output BirdNET, open-source neural network developed Cornell Lab Ornithology Chemnitz University Technology detecting identifying bird sounds. goal birdnetTools help researchers manage, explore, validate BirdNET results, can derived BirdNET Analyzer, birdnetR package. includes functions filtering detections species, confidence, date/time; visualizing temporal patterns; validating detections interactive Shiny app support threshold-setting workflows.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package for working with BirdNET output","text":"can install development version birdnetTools GitHub :","code":"# install.packages(\"pak\") pak::pak(\"birdnet-team/birdnetTools\")"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"example-use","dir":"","previous_headings":"","what":"Example use","title":"R package for working with BirdNET output","text":"quick example using built-dataset example_jprf_2023, contains detections recorded five ARUs northern British Columbia. ’ll filter detections Swainson’s Thrush, visualize detection patterns, calculate species-specific threshold simulated validation data.","code":"library(birdnetTools)  # Load built-in dataset data(example_jprf_2023, package = \"birdnetTools\") data <- example_jprf_2023  # Filter for Swainson's Thrush detections during spring data_filtered <- birdnet_filter(data,   species = \"Swainson's Thrush\",   threshold = 0.2,   year = 2023,   min_date = \"2023-05-01\",   max_date = \"2023-06-30\" )  # Visualize daily detection patterns across sites birdnet_heatmap(data_filtered) # Simulate validation (for demonstration only) set.seed(123) data_sub <- birdnet_subsample(data_filtered, n = 300, method = \"stratified\") data_sub$validation <- rbinom(nrow(data_sub), 1, prob = pmin(pmax(data_sub$confidence, 0), 1))  # Calculate species-specific threshold for 90% precision birdnet_calc_threshold(data_sub, precision = 0.9) #> ℹ Processing species: Swainson's Thrush #> ✔ Thresholds calculated to achieve 0.9 precision. #> # A tibble: 1 × 2 #>   common_name       threshold #>   <chr>                 <dbl> #> 1 Swainson's Thrush     0.917"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R package for working with BirdNET output","text":"development birdnetTools part visiting scholar program supported Michael Smith Foreign Study Supplements, funded Natural Sciences Engineering Research Council Canada (NSERC). ’m incredibly fortunate received support, allowed collaborate person BirdNET team Chemnitz, Germany. valuable opportunity—scientific collaboration networking, also memorable moments shared colleagues vibrant atmosphere life Europe.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"birdnet-funding-and-partners","dir":"","previous_headings":"","what":"BirdNET funding and partners","title":"R package for working with BirdNET output","text":"BirdNET supported Jake Holshuh (Cornell class ’69) Arthur Vining Davis Foundations. work K. Lisa Yang Center Conservation Bioacoustics made possible generosity K. Lisa Yang advance innovative conservation technologies inspire inform conservation wildlife habitats. development BirdNET supported German Federal Ministry Education Research project “BirdNET+” (FKZ 01|S22072). German Federal Ministry Environment, Nature Conservation Nuclear Safety contributes “DeepBirdDetect” project (FKZ 67KI31040E). addition, Deutsche Bundesstiftung Umwelt supports BirdNET project “RangerSound” (project 39263/01). BirdNET joint effort partners academia industry. Without partnerships, project possible.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","title":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","text":"Maintainer: Sunny Tseng sunnyyctseng@gmail.com (ORCID)","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"Extracts parses datetime information filenames specified column, adds several useful time-related columns (e.g., date, year, month, hour) input data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"birdnet_add_datetime(data, col = filepath, tz = \"UTC\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data data frame containing BirdNET output. col Unquoted name column contains file paths (e.g., File). tz Time zone assign parsing datetime. Defaults \"UTC\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data frame additional columns: datetime POSIXct datetime parsed filename. date Date portion datetime. year, month, mday, yday, hour, minute Individual datetime components.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"if (FALSE) { # \\dontrun{ combined_data <- birdnet_combine(\"path/to/BirdNET/output\") data_with_time <- birdnet_add_datetime(combined_data, col = File) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"Calculates species-specific confidence thresholds BirdNET detections based either target precision predicted probability logistic regression model. Returns tibble one threshold per species. precision approach based Tseng et al., 2025, probability approach based Wood Kahl, 2024.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"","code":"birdnet_calc_threshold(   validated_data,   full_data = NULL,   probability = NULL,   precision = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"validated_data data frame validated BirdNET detections columns common_name, confidence, validation. validation column must contain 1 (true positives) 0 (false positives). full_data Optional. data frame BirdNET detections. Must contain least common_name confidence columns. NULL, validated_data used. probability Target predicted probability (0 1) used calculate threshold logistic regression. precision Target precision (0 1) used select threshold achieving precision.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"tibble two columns: common_name Species common name threshold Calculated confidence threshold","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"precision provided, thresholds selected based lowest confidence score achieves exceeds desired precision applied predicted probabilities. probability provided instead, thresholds calculated directly inverse logit logistic regression model. must provide exactly one precision probability. calculated thresholds clamped range minimum observed confidence validated_data 1.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_calc_threshold(   validated_data = validated_df,   full_data = full_df,   precision = 0.9 ) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and standardize column names — birdnet_clean_names","title":"Clean and standardize column names — birdnet_clean_names","text":"function standardizes column names BirdNET output-like dataframe. renames columns match patterns like \"start\", \"end\", \"scientific\", \"common\", \"file\", \"confidence\" (case-insensitive) consistent names: \"start\", \"end\", \"scientific_name\", \"common_name\", \"filepath\", \"confidence\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"birdnet_clean_names(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and standardize column names — birdnet_clean_names","text":"data data frame containing output BirdNET similar data timestamp species information.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and standardize column names — birdnet_clean_names","text":"data frame renamed columns.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   Start.Time = 1:3,   End.Time = 4:6,   Scientific = c(\"Turdus migratorius\", \"Cyanocitta cristata\", \"Corvus brachyrhynchos\"),   Common = c(\"American Robin\", \"Blue Jay\", \"American Crow\"),   File.Name = c(\"file1.wav\", \"file2.wav\", \"file3.wav\"),   Confidence.Score = c(0.95, 0.87, 0.90) ) birdnet_clean_names(df) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Group BirdNET output files — birdnet_combine","title":"Group BirdNET output files — birdnet_combine","text":"Reads combines multiple BirdNET output .csv .txt files specified directory single data frame. Files named \"analysis_params\" \"CombinedTable\" specified directory automatically excluded.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group BirdNET output files — birdnet_combine","text":"","code":"birdnet_combine(path)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group BirdNET output files — birdnet_combine","text":"path Character string. directory path containing BirdNET output .csv .txt files. Can include subdirectories.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group BirdNET output files — birdnet_combine","text":"data frame containing combined BirdNET detection data valid files, columns: start: Detection start time seconds. end: Detection end time seconds. scientific_name: Scientific name detected species. common_name: Common name detected species. confidence: Confidence score detection. filepath: Name file detection found.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group BirdNET output files — birdnet_combine","text":"function useful aggregating BirdNET output batch runs large-scale deployments. uses fixed column specification ensure consistent parsing file. Files incompatible formats errors skipped names printed warning.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group BirdNET output files — birdnet_combine","text":"","code":"if (FALSE) { # \\dontrun{ data <- birdnet_combine(\"path/to/BirdNET/output\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"Drop datetime-related columns BirdNET output","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"","code":"birdnet_drop_datetime(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data data frame containing BirdNET output, datetime related columns present.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data frame datime related columns removed.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"Applies one common filtering operations BirdNET output dataframe. includes filtering species name, confidence threshold, year, date range, hour range. function also records filtering parameters attribute (filter_log) attached returned dataframe, allowing users inspect filters applied.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"birdnet_filter(   data,   species = NULL,   threshold = NULL,   year = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"data data frame containing BirdNET output. Column names standardized internally using birdnet_clean_names(). species Character vector. One common names species filter (e.g., c(\"Swainson's Thrush\", \"American Robin\")). threshold Either single numeric value 0 1 (universal threshold) data frame scientific_name threshold columns species-specific thresholds. Rows confidence threshold excluded. year Integer vector integers. Year(s) retain data (e.g., c(2024:2025)). min_date, max_date Character strings Date objects specifying date range (inclusive). one provided, filtering open-ended side (e.g., \"2025-06-09\"). hour Integer vector 0 23 specifying hours day keep (e.g., c(4:7)).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"filtered data frame \"filter_log\" attribute containing filtering parameters used.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"if (FALSE) { # \\dontrun{ filtered <- birdnet_filter(data,   species = \"Swainson's Thrush\",   threshold = 0.75 ) attr(filtered, \"filter_log\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by date range — birdnet_filter_date_range","title":"Filter data by date range — birdnet_filter_date_range","text":"Filters BirdNET data include rows within specified date range.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by date range — birdnet_filter_date_range","text":"","code":"birdnet_filter_date_range(data, min_date = NULL, max_date = NULL)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by date range — birdnet_filter_date_range","text":"data data frame (without) date column. missing, datetime columns added. min_date Date character string coercible Date. minimum date (inclusive). max_date Date character string coercible Date. maximum date (inclusive).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by date range — birdnet_filter_date_range","text":"filtered data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by hour — birdnet_filter_hour","title":"Filter data by hour — birdnet_filter_hour","text":"Filters BirdNET data include rows specific hours day.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by hour — birdnet_filter_hour","text":"","code":"birdnet_filter_hour(data, hour_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by hour — birdnet_filter_hour","text":"data data frame (without) hour column. missing, datetime columns added. hour_arg Integer vector hours (0–23) keep.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by hour — birdnet_filter_hour","text":"filtered data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by species — birdnet_filter_species","title":"Filter data by species — birdnet_filter_species","text":"Filters BirdNET data one specified species.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by species — birdnet_filter_species","text":"","code":"birdnet_filter_species(data, species)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by species — birdnet_filter_species","text":"data data frame containing BirdNET output common_name column. species Character vector. One common names species keep.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by species — birdnet_filter_species","text":"filtered data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by confidence threshold — birdnet_filter_threshold","title":"Filter data by confidence threshold — birdnet_filter_threshold","text":"Filters BirdNET data based universal species-specific confidence threshold.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by confidence threshold — birdnet_filter_threshold","text":"","code":"birdnet_filter_threshold(data, threshold_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by confidence threshold — birdnet_filter_threshold","text":"data data frame containing BirdNET output confidence scientific_name columns. threshold_arg Either single numeric value (universal threshold) data frame scientific_name threshold columns species-specific thresholds.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by confidence threshold — birdnet_filter_threshold","text":"filtered data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by year — birdnet_filter_year","title":"Filter data by year — birdnet_filter_year","text":"Filters BirdNET data based year detection.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by year — birdnet_filter_year","text":"","code":"birdnet_filter_year(data, year_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by year — birdnet_filter_year","text":"data data frame (without) year column. missing, datetime columns added. year_arg Integer vector. year(s) keep.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by year — birdnet_filter_year","text":"filtered data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"function generates heatmap showing daily activity pattern specified species detected BirdNET output data. function optionally filters detections confidence threshold displays activity levels (number detections) across time.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"birdnet_heatmap(   data,   species = NULL,   threshold = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"data data frame containing BirdNET output. Must include columns time species information. Column names standardized internally using birdnet_clean_names(). species Character. common name species visualize. threshold Numeric NULL. Optional confidence threshold (0–1) used filter detections. NULL, threshold filtering applied. min_date Character NULL. minimum date include heatmap. NULL, earliest date used. max_date Character NULL. maximum date include heatmap. NULL, latest date used. hour Integer vector 0 23 specifying hours day keep (e.g., c(4:7)).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"ggplot heatmap showing number detections hour date.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_heatmap(data = birdnet_output, species = \"Swainson's Thrush\", threshold = 0.7) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the BirdNET audio validation app — birdnet_launch_validation","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"Starts interactive Shiny application manually validating BirdNET detections using audio clips spectrograms.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"","code":"birdnet_launch_validation()"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"shiny.appobj runs BirdNET audio validation platform web browser.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"function launches user-friendly Shiny app allows : Import CSV file BirdNET detections (selection table format), Select directory containing .wav audio files, View validate detection using spectrograms audio playback, Edit validation results interactively save updated table. tool designed support manual review BirdNET results.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_launch_validation() } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsample BirdNET detections by species — birdnet_subsample","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"Subsamples specified number observations given species BirdNET output dataset using one three methods: stratified, random, top confidence. Optionally saves result CSV file.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"birdnet_subsample(   data,   n,   method = c(\"stratified\", \"random\", \"top\"),   save_to_file = FALSE,   file = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data data frame containing BirdNET output. must include least columns common_name confidence. n Integer. Total number observations subsample species data. method Character string. Subsampling method use. One \"stratified\", \"random\", \"top\": \"stratified\" Samples across confidence score strata (0.1 1 0.05 bins) evenly. \"random\" Randomly samples n observations. \"top\" Selects top n observations highest confidence. save_to_file Logical. TRUE, saves output data frame file named \"subsampled_data.csv\" working directory. Default FALSE. Automatically set TRUE path defined. file Character string NULL. File path save output. NULL save_to_file = TRUE, file saved \"subsampled_data.csv\" working directory.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data frame containing subsampled observations.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_subsample(data = my_data, species = \"American Robin\", n = 300, method = \"stratified\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for BirdNET audio validation platform — birdnet_validation_server","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"Defines server-side logic audio validation app within birdnetTools package. server handles file imports, audio directory selection, spectrogram generation, interactive table editing, audio playback.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"","code":"birdnet_validation_server(input, output, session)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"input, output, session Standard shiny server function parameters.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"function called side effects context shinyApp.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"internal server function powers interactive audio validation interface. Users can import CSV BirdNET detections, link local audio directories, view spectrograms, manually validate detections Shiny DataTable interface. Audio playback validation column editing supported.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for BirdNET audio validation platform — birdnet_validation_ui","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"Constructs UI layout audio validation platform within birdnetTools package. UI includes file input, audio folder selection, spectrogram settings, main output areas data display spectrogram plotting.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"","code":"birdnet_validation_ui(request)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"request Internal parameter {shiny} applications. Typically set user.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"shiny UI object built bslib::page_sidebar().","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"internal UI function used Shiny validation app launched higher-level user-facing functions. sets sidebar inputs file import settings, main panel outputs data spectrogram display.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":null,"dir":"Reference","previous_headings":"","what":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"sample BirdNET selection table generated audio recordings collected 5 sites, John Prince Research Forest, British Columbia, Canada, May–June 2023. Recordings scheduled continuously 24 hours using duty cycle 1 minute , 4 minutes . Audio files analyzed using BirdNET GUI (model version 2.4) confidence threshold 0.1; parameters kept default values.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"","code":"example_jprf_2023"},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"example-jprf-","dir":"Reference","previous_headings":"","what":"example_jprf_2023","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"data frame 392,300 rows 14 columns. Key columns include: filepath Full path audio file detection made start Start time detection seconds end End time detection seconds scientific_name Scientific name detected species sound event common_name Common name detected species sound event confidence BirdNET-assigned confidence score (0 1) lat Latitude recording location (set -1 embedded) lon Longitude recording location (set -1 embedded) week Week number year (set -1 available) overlap Whether overlapping segments analyzed (0 = , 1 = yes) sensitivity Sensitivity parameter used detection (default = 1) min_conf Minimum confidence threshold used detection (e.g., 0.1) species_list Species list constraint used (e.g., \"None\" set) model Name BirdNET model used detection","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"https://sunnytseng.ca/","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"dataset useful demonstrating typical BirdNET output testing workflows involving species filtering, thresholding, temporal subsetting.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Current time — what_time","title":"Current time — what_time","text":"Returns sentence current time","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current time — what_time","text":"","code":"what_time(city = \"Vancouver\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current time — what_time","text":"city City either \"Vancouver\" \"Chemnitz\"","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current time — what_time","text":"character string","code":""}]
