[{"path":"https://birdnet-team.github.io/birdnetTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 birdnetTools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"data-import","dir":"Articles","previous_headings":"","what":"Data Import","title":"Get started with birdnetTools","text":"BirdNET detections can imported various formats depending data processed saved. birdnetTools package supports three main workflows: Importing multiple detection results processing audio files BirdNET, may several .csv files—corresponding separate recording. birdnet_combine() function allows import merge files R . reads .csv files specified directory, combines single data frame, adds filepath column ’s already present. especially useful ’ve processed large batches audio recordings want work collectively R. Importing combined detection results already combined output file, example, checked “combine output table” option BirdNET GUI, can read directly R using readr package: Using detection results already R Another possibility analyzed audio files using birdnetR package, default returns data frame containing BirdNET detections. case, can use data frame directly analysis without needing import . functions birdnetTools designed work data frames include necessary columns: start, end, common_name, confidence, filepath.","code":"# import multiple detection files birdnet_combine(path = \"PATH_TO_BIDNET_OUTPUT_FOLDER\") # Import a combined detection CSV library(readr) detections <- read_csv(\"PATH_TO_BIRDNET_OUTPUT_FILE.csv\")"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"exploring-and-preparing-data","dir":"Articles","previous_headings":"","what":"Exploring and Preparing Data","title":"Get started with birdnetTools","text":"demonstrate functions birdnetTools work, use built-dataset example_jprf_2023. dataset contains BirdNET detections recorded John Prince Research Forest British Columbia, Canada, continuous 24-hour period May–June 2023, 5 ARU locations. recordings processed using BirdNET GUI (model v2.4) confidence threshold 0.1. dataset contains 392,300 rows 14 columns, including information file path, start end times detections, species names, confidence scores.","code":"# load the dataset data <- example_jprf_2023  # view the dataset documentation ?example_jprf_2023"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"filtering-data-with-customized-criteria","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Filtering data with customized criteria","title":"Get started with birdnetTools","text":"cases, researchers don’t work directly full set raw BirdNET detections. Instead, may interested filtering specific specie(s), applying confidence threshold, narrowing dataset date, selecting recordings certain hours day. birdnet_filter() function makes easy apply filters single step: birdnet_filter() function allows filter BirdNET detections based variety criteria, including species, confidence threshold, year, date range, hour day. species argument specified using common names, either single character string vector names. threshold argument accepts either numeric value (universal threshold) data frame containing common_name threshold columns (species-specific thresholds); detections confidence scores specified threshold excluded. year hour arguments can also given single values vectors. applying filters using birdnet_filter(), function automatically records filtering criteria data’s attributes. makes easy keep track dataset processed:","code":"# apply filter data_filtered <- birdnet_filter(data,                                 species = \"Swainson's Thrush\",                                 threshold = 0.2,                                 year = 2023,                                 min_date = \"2023-05-01\",                                 max_date = \"2023-06-30\",                                 hour = c(0:23) )  # view function documentation ?birdnet_filter() attr(data_filtered, \"filter_log\") #> $species #> [1] \"Swainson's Thrush\" #>  #> $threshold #> [1] 0.2 #>  #> $year #> [1] 2023 #>  #> $min_date #> [1] \"2023-05-01\" #>  #> $max_date #> [1] \"2023-06-30\" #>  #> $hour #>  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"visualizing-rawfiltered-data","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Visualizing raw/filtered data","title":"Get started with birdnetTools","text":"Visualization easiest way quickly examine data, identify obvious outliers, assess detection distributions, observe patterns. birdnet_heatmap() function provides type visualization can used either raw filtered data. example activity pattern Swainson’s Thrushe across breeding season (across 5 ARU sites).  Note: visualize raw data (filtering species site), detections grouped across species locations — interpret caution.","code":"birdnet_heatmap(data_filtered)"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"add-columns-for-date-and-time","dir":"Articles","previous_headings":"Exploring and Preparing Data","what":"Add columns for date and time","title":"Get started with birdnetTools","text":"Often, necessary datetime information associated detections know exactly detections made (.e., bird singing). birdnet_add_datetime() adds datetime information data. function requires original dataset include datetime details within file path column. scans file path datetime patterns extracts date (year, month, day) time (hour, minute).","code":"# add datetime information to the filtered data data_with_datetime <- birdnet_add_datetime(data_filtered)  # show which new columns were added new_columns <- setdiff(colnames(data_with_datetime), colnames(data_filtered)) new_columns #> [1] \"datetime\" \"date\"     \"year\"     \"month\"    \"mday\"     \"yday\"     \"hour\"     #> [8] \"minute\""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"validating-detections-getting-thresholds","dir":"Articles","previous_headings":"","what":"Validating Detections & Getting Thresholds","title":"Get started with birdnetTools","text":"BirdNET detection includes “confidence” score, score reflect true probability varies meaning across species. example, BirdNET may detect one species reliably even low confidence, another may still yield false positives high confidence. improve reliability, ’s recommended use species-specific thresholds. section follows methods outlined Tseng et al. 2025, require validation process subset detections reviewed human experts classify true false positives. context interpreting confidence scores, see Wood Kahl 2024.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"get-a-validation-set-by-subsampling","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"1. Get a validation set by subsampling","title":"Get started with birdnetTools","text":"get species-specific threshold, need validate detections data_filtered, contains Swainson’s Thrush detections filtered 0.2 confidence threshold. First, need subsample portion manual review. birdnet_subsample() function supports three sampling methods: stratified (evenly across confidence levels), random (selection based confidence score distribution), top (highest confidence detections). stratified random approaches help create representative validation set, top sampling targets confident predictions. Optionally, can save subsampled detections .csv file working directory setting save_to_file = TRUE specifying file name:","code":"# subsample 300 detections from the filtered data set.seed(123)  # for reproducibility data_subsampled <- birdnet_subsample(data_filtered,                                      n = 300,                                      method = \"stratified\")  # view function documentation ?birdnet_subsample() birdnet_subsample(   data_filtered,   n = 300,   method = \"stratified\",   save_to_file = TRUE, # whether to save the subsample to a file   file = \"swainsons_thrush_validation.csv\" # name of the file )"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"validation-using-shinyapp","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"2. Validation using shinyApp","title":"Get started with birdnetTools","text":"Manually validating detections, locating audio files, finding timestamps, listening clips, can slow tedious. birdnet_launch_validation() function streamlines process launching Shiny app displays subsampled detections alongside spectrograms corresponding audio clips. interactive interface, users can quickly review detection listening audio viewing spectrograms edit validation datasheet, making validation process much efficient. running code , Shiny interface launch. app requires two inputs: Detection file (.csv) – file containing BirdNET predictions selected validation. Audio folder path – directory corresponding audio clips stored. loaded: top panel display table detections. Clicking “Spectrogram” show corresponding visual signal ; clicking “Audio” play relevant clip. validate, double-click U (Unknown) cell validation column. Enter 1 true positive 0 false positive. input update original .csv file. finished, click “Save” export results. new file created _validation appended original name. complete part validation, file can later reloaded resume process. “Settings” tab lets tweak spectrogram display options. ’re getting tired, try “Praise ” button quick boost motivation. 🌟","code":"birdnet_launch_validation()"},{"path":"https://birdnet-team.github.io/birdnetTools/articles/birdnetTools.html","id":"get-threshold","dir":"Articles","previous_headings":"Validating Detections & Getting Thresholds","what":"3. Get threshold","title":"Get started with birdnetTools","text":"set BirdNET detections validated (.e., manually labeled true false positives), can calculate species-specific confidence threshold meets desired level precision. birdnet_calc_threshold() function helps identify minimum confidence score required achieve target precision given species. takes one line code calculate species-specific thresholds using birdnet_calc_threshold() function. function requires data frame containing columns common_name, confidence, validation (validation 1 true positives 0 false positives). returns minimum confidence score needed achieve specified precision probability level. details difference precision probability arguments, please see function documentation (?birdnet_calc_threshold()). Note: demonstrate function, use simulated validation dataset included package. dataset mimics real validation file might look like, derived actual expert-reviewed audio.","code":"# simulate validation as a Bernoulli trial data_subsampled$validation <- rbinom(   n = nrow(data_subsampled),    size = 1,    prob = pmin(pmax(data_subsampled$confidence, 0), 1) ) birdnet_calc_threshold(data_subsampled,                        precision = 0.9) #> ℹ Processing species: Swainson's Thrush #> ✔ Thresholds calculated to achieve 0.9 precision. #> # A tibble: 1 × 2 #>   common_name       threshold #>   <chr>                 <dbl> #> 1 Swainson's Thrush       0.8"},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sunny Tseng. Author, maintainer.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tseng S (2025). birdnetTools: R package working BirdNET output. R package version 0.1.0, https://birdnet-team.github.io/birdnetTools/.","code":"@Manual{,   title = {birdnetTools: R package for working with BirdNET output},   author = {Sunny Tseng},   year = {2025},   note = {R package version 0.1.0},   url = {https://birdnet-team.github.io/birdnetTools/}, }"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"birdnettools-","dir":"","previous_headings":"","what":"R package for working with BirdNET output","title":"R package for working with BirdNET output","text":"birdnetTools R package designed streamline post-processing validation output BirdNET, open-source neural network developed Cornell Lab Ornithology Chemnitz University Technology detecting identifying bird sounds. goal birdnetTools help researchers manage, explore, validate BirdNET results, can derived BirdNET Analyzer, birdnetR package. includes functions filtering detections species, confidence, date/time; visualizing temporal patterns; validating detections interactive Shiny app support threshold-setting workflows.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package for working with BirdNET output","text":"can install development version birdnetTools GitHub :","code":"# install.packages(\"pak\") pak::pak(\"birdnet-team/birdnetTools\")"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"example-use","dir":"","previous_headings":"","what":"Example use","title":"R package for working with BirdNET output","text":"quick example using built-dataset example_jprf_2023, contains detections recorded five ARUs northern British Columbia. ’ll filter detections Swainson’s Thrush, visualize detection patterns, calculate species-specific threshold simulated validation data.","code":"library(birdnetTools)  # Load built-in dataset data <- example_jprf_2023   # Filter for Swainson's Thrush detections during spring data_filtered <- birdnet_filter(data,                                 species = \"Swainson's Thrush\",                                 threshold = 0.2,                                 year = 2023,                                 min_date = \"2023-05-01\",                                 max_date = \"2023-06-30\")   # Visualize daily detection patterns across sites birdnet_heatmap(data_filtered) # Simulate validation (for demonstration only) set.seed(123) data_sub <- birdnet_subsample(data_filtered, n = 300, method = \"stratified\")  data_sub$validation <- rbinom(nrow(data_sub), 1,                                prob = pmin(pmax(data_sub$confidence, 0), 1))   # Calculate species-specific threshold for 90% precision birdnet_calc_threshold(data_sub, precision = 0.9) #> ℹ Processing species: Swainson's Thrush #> ✔ Thresholds calculated to achieve 0.9 precision. #> # A tibble: 1 × 2 #>   common_name       threshold #>   <chr>                 <dbl> #> 1 Swainson's Thrush       0.8"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R package for working with BirdNET output","text":"development birdnetTools part visiting scholar program supported Michael Smith Foreign Study Supplements, funded Natural Sciences Engineering Research Council Canada (NSERC). ’m incredibly fortunate received support, allowed collaborate person BirdNET team Chemnitz, Germany. valuable opportunity—scientific collaboration networking, also memorable moments shared colleagues vibrant atmosphere life Europe.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"birdnet-funding-and-partners","dir":"","previous_headings":"","what":"BirdNET funding and partners","title":"R package for working with BirdNET output","text":"BirdNET supported Jake Holshuh (Cornell class ’69) Arthur Vining Davis Foundations. work K. Lisa Yang Center Conservation Bioacoustics made possible generosity K. Lisa Yang advance innovative conservation technologies inspire inform conservation wildlife habitats. development BirdNET supported German Federal Ministry Education Research project “BirdNET+” (FKZ 01|S22072). German Federal Ministry Environment, Nature Conservation Nuclear Safety contributes “DeepBirdDetect” project (FKZ 67KI31040E). addition, Deutsche Bundesstiftung Umwelt supports BirdNET project “RangerSound” (project 39263/01). BirdNET joint effort partners academia industry. Without partnerships, project possible.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","title":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdnetTools: R package for working with BirdNET output — birdnetTools-package","text":"Maintainer: Sunny Tseng sunnyyctseng@gmail.com (ORCID)","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"Extracts parses datetime information filenames file path column (automatically detected), adds several useful time-related columns (e.g., date, year, month, hour) input data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"birdnet_add_datetime(data, tz = \"UTC\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data data frame containing BirdNET output. tz character string specifying time zone assign parsing datetime. Defaults \"UTC\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data frame additional columns: datetime POSIXct datetime parsed filename. date Date portion datetime. year Year detection. month Month detection. mday Day month. yday Day year. hour Hour day. minute Minute hour.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"function uses birdnet_detect_columns find column containing file paths based common name patterns (e.g., \"file\", \"path\"). Filenames expected contain datetime string format \"YYYYMMDD_HHMMSS\" similar.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"if (FALSE) { # \\dontrun{ combined_data <- birdnet_combine(\"path/to/BirdNET/output\") data_with_time <- birdnet_add_datetime(combined_data) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"Computes species-specific confidence thresholds BirdNET detections using either target precision target predicted probability logistic regression model. function returns one threshold per species. precision-based approach follows Tseng et al. (2025), probability-based method adapted Wood Kahl (2024).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"","code":"birdnet_calc_threshold(   validated_data,   full_data = NULL,   probability = NULL,   precision = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"validated_data data frame validated BirdNET detections columns common_name, confidence, validation. validation column must contain 1 (true positives) 0 (false positives). full_data Optional. data frame BirdNET detections least common_name confidence columns. NULL, validated_data used instead. probability Numeric. target predicted probability (0 1) used calculate thresholds logistic regression model. precision Numeric. target precision (0 1) used select lowest threshold achieves desired precision.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"tibble two columns: common_name Species common name. threshold calculated confidence threshold species.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"must supply exactly one precision probability. neither provided, function throw error. using precision method, function predicts probabilities detection using logistic regression model fit validated_data. identifies lowest confidence threshold meets exceeds target precision. using probability method, function calculates confidence threshold corresponding inverse logit target predicted probability regression model. thresholds clamped fall minimum observed confidence validated_data 1.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_calc_threshold.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate species-specific confidence thresholds for BirdNET detections — birdnet_calc_threshold","text":"Tseng, S., Hodder, D. P., & Otter, K. . (2025). Setting BirdNET confidence thresholds: Species-specific vs. universal approaches. Journal Ornithology. https://doi.org/10.1007/s10336-025-02260-w Wood, C. M., & Kahl, S. (2024). Guidelines appropriate use BirdNET scores detector outputs. Journal Ornithology. https://doi.org/10.1007/s10336-024-02144-5","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and standardize column names — birdnet_clean_names","title":"Clean and standardize column names — birdnet_clean_names","text":"DEPRECATED. function longer recommended use. Consider using birdnet_detect_columns instead robust column detection standardization. Standardizes column names BirdNET-like data frame. function renames columns matching patterns like \"start\", \"end\", \"scientific\", \"common\", \"file\", \"confidence\" (case-insensitive) consistent names: \"start\", \"end\", \"scientific_name\", \"common_name\", \"filepath\", \"confidence\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"birdnet_clean_names(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and standardize column names — birdnet_clean_names","text":"data data frame containing BirdNET output similar data timestamp species information.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and standardize column names — birdnet_clean_names","text":"data frame renamed, standardized column names.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   Start.Time = 1:3,   End.Time = 4:6,   Scientific = c(\"Turdus migratorius\", \"Cyanocitta cristata\", \"Corvus brachyrhynchos\"),   Common = c(\"American Robin\", \"Blue Jay\", \"American Crow\"),   File.Name = c(\"file1.wav\", \"file2.wav\", \"file3.wav\"),   Confidence.Score = c(0.95, 0.87, 0.90) ) birdnet_clean_names(df) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine BirdNET output files from a directory — birdnet_combine","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"Reads combines multiple BirdNET output .csv .txt files specified directory (including subdirectories) single data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"","code":"birdnet_combine(path)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"path Character string. Path directory containing BirdNET output files.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"data frame combining readable BirdNET .csv .txt files found directory. column structure depends input files standardized function.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"Files named \"analysis_params\" \"CombinedTable\" automatically excluded. Files empty read skipped. summary many files successfully read files () caused errors printed end. function useful aggregating large batches BirdNET results without requiring consistent formatting. subdirectories searched recursively. Files read using readr::read_csv(), empty files silently ignored. valid files found, files excluded cause read errors, function aborts informative message.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine BirdNET output files from a directory — birdnet_combine","text":"","code":"if (FALSE) { # \\dontrun{ # Combine all BirdNET output files in a directory and its subfolders data <- birdnet_combine(\"path/to/BirdNET/output\")  # View a few rows of the result head(data) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_detect_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","title":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","text":"Helper function identify likely columns representing key BirdNET output variables start time, end time, scientific name, common name, confidence, filepath.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_detect_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","text":"","code":"birdnet_detect_columns(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_detect_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","text":"data data frame containing BirdNET output data.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_detect_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","text":"named list elements: start Column name start time (NA). end Column name end time (NA). scientific_name Column name scientific name (NA). common_name Column name common name (NA). confidence Column name confidence score (NA). filepath Column name file path file name (NA).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_detect_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect standard BirdNET column names in a data frame — birdnet_detect_columns","text":"function attempts match user-supplied data frame column names expected BirdNET output columns pattern matching. returns named list detected column names NA match found.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"Removes datetime-related columns (e.g., datetime, date, year, hour, etc.) may added using birdnet_add_datetime.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"","code":"birdnet_drop_datetime(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data data frame containing BirdNET output, datetime-related columns present.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data frame datetime-related columns removed, present.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"Applies one common filtering operations BirdNET output data frame. Supports filtering species name, confidence threshold (universal species-specific), year, date range, hour day.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"birdnet_filter(   data,   species = NULL,   threshold = NULL,   year = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"data data frame containing BirdNET output. Relevant columns (e.g., common name, confidence, datetime) automatically detected birdnet_detect_columns. species Character vector. One common names species retain (e.g., c(\"Swainson's Thrush\", \"American Robin\")). threshold Either single numeric value 0 1 (universal threshold), data frame columns common_name threshold species-specific thresholds. year Integer vector integers specifying year(s) retain (e.g., 2024:2025). min_date, max_date Optional. Character strings Date objects specifying date range \"YYYY-MM-DD\" format. one provided, filtering open-ended side. hour Integer vector 0 23 specifying hours day retain (e.g., 4:7).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"filtered data frame attribute \"filter_log\" containing applied filters.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"function uses birdnet_detect_columns automatically identify relevant columns (e.g., species names, confidence, datetime) based common naming patterns. applied filter parameters stored attribute called \"filter_log\" attached returned data frame, can accessed via attr(x, \"filter_log\").","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"if (FALSE) { # \\dontrun{ filtered <- birdnet_filter(   data = birdnet_combine(\"path/to/output\"),   species = \"Swainson's Thrush\",   threshold = 0.75,   year = 2025,   min_date = \"2025-06-01\",   hour = 4:8 ) attr(filtered, \"filter_log\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET data by date range — birdnet_filter_date_range","title":"Filter BirdNET data by date range — birdnet_filter_date_range","text":"Filters BirdNET output data frame include rows detections within specified date range. date column missing, extracted available datetime columns.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET data by date range — birdnet_filter_date_range","text":"","code":"birdnet_filter_date_range(data, min_date = NULL, max_date = NULL)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET data by date range — birdnet_filter_date_range","text":"data data frame containing BirdNET output. date column present, function attempt extract using birdnet_add_datetime. min_date Date character string coercible Date. earliest date include (inclusive). max_date Date character string coercible Date. latest date include (inclusive).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET data by date range — birdnet_filter_date_range","text":"data frame filtered include rows within specified date range.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET data by hour of day — birdnet_filter_hour","title":"Filter BirdNET data by hour of day — birdnet_filter_hour","text":"Filters BirdNET output data frame include rows detections occurring specified hours day (0–23). hour column missing, extracted available datetime columns.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET data by hour of day — birdnet_filter_hour","text":"","code":"birdnet_filter_hour(data, hour_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET data by hour of day — birdnet_filter_hour","text":"data data frame containing BirdNET output. hour column present, function attempt extract using birdnet_add_datetime. hour_arg Integer vector hours (0 23) retain.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_hour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET data by hour of day — birdnet_filter_hour","text":"data frame filtered include detections within specified hours.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET data by species — birdnet_filter_species","title":"Filter BirdNET data by species — birdnet_filter_species","text":"Filters BirdNET output data frame one specified species using column automatically detected containing common species names.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET data by species — birdnet_filter_species","text":"","code":"birdnet_filter_species(data, species)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET data by species — birdnet_filter_species","text":"data data frame containing BirdNET output. species Character vector. One common names species keep.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET data by species — birdnet_filter_species","text":"data frame filtered include specified species.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter BirdNET data by species — birdnet_filter_species","text":"function uses birdnet_detect_columns identify appropriate column (e.g., \"Common Name\", \"common_name\", etc.) containing common names species, filters data frame retain rows matching specified species.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","title":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","text":"Filters BirdNET output data frame based confidence threshold, using either universal numeric value species-specific thresholds.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","text":"","code":"birdnet_filter_threshold(data, threshold_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","text":"data data frame containing BirdNET output. threshold_arg Either: single numeric value specifying universal confidence threshold, data frame columns common_name threshold, specifying species-specific thresholds.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","text":"data frame filtered include rows confidence scores meet threshold criteria.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_threshold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter BirdNET data by confidence threshold — birdnet_filter_threshold","text":"function uses birdnet_detect_columns automatically detect column names (e.g., \"Confidence\", \"Scientific Name\") based common patterns.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET data by year — birdnet_filter_year","title":"Filter BirdNET data by year — birdnet_filter_year","text":"Filters BirdNET output data frame based one specified years detection. year column missing, function extract available datetime columns.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET data by year — birdnet_filter_year","text":"","code":"birdnet_filter_year(data, year_arg)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET data by year — birdnet_filter_year","text":"data data frame containing BirdNET output. year column absent, function attempt extract datetime information using birdnet_add_datetime. year_arg Integer vector. year years retain filtered data.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET data by year — birdnet_filter_year","text":"filtered data frame containing rows detections specified years.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"Generates heatmap visualizing daily activity pattern specified species detected BirdNET output data. heatmap shows detection counts hour date, optionally filtered species, confidence threshold, date range, hours day.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"birdnet_heatmap(   data,   species = NULL,   threshold = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"data data frame containing BirdNET output. Relevant columns (e.g., common name, confidence, datetime, filepath, etc.) automatically detected birdnet_detect_columns. Must include columns like common_name, confidence, datetime. species Character scalar vector specifying common name(s) species visualize. NULL, species filtering applied. threshold Either numeric scalar 0 1 (applied uniformly), data frame columns common_name threshold species-specific values. NULL, threshold filtering applied. min_date Optional character scalar giving earliest date include (\"YYYY-MM-DD\" format). max_date Optional character scalar giving latest date include (\"YYYY-MM-DD\" format). hour Optional integer vector (0–23) specifying hours day include heatmap.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"ggplot object showing heatmap detections date (x-axis) hour (y-axis). fill color corresponds detection counts.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_heatmap(   data = birdnet_output,   species = \"Swainson's Thrush\",   threshold = 0.7,   min_date = \"2024-06-01\",   max_date = \"2024-06-30\",   hour = 4:7 ) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the BirdNET audio validation app — birdnet_launch_validation","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"Starts interactive Shiny application manually validating BirdNET detections using audio clips spectrograms.tool designed support manual review BirdNET results.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"","code":"birdnet_launch_validation()"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"shiny.appobj runs BirdNET audio validation platform web browser.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"function launches user-friendly Shiny app allows : Import CSV file BirdNET detections (selection table format), Select directory containing .wav audio files, View validate detection using spectrograms audio playback, Edit validation results interactively save updated table.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_launch_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the BirdNET audio validation app — birdnet_launch_validation","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_launch_validation() } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsample BirdNET detections by species — birdnet_subsample","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"Subsamples specified number observations per species BirdNET output dataset. Supports three subsampling methods: stratified confidence score bins, random, top confidence scores. Optionally saves subsampled data CSV file.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"birdnet_subsample(   data,   n,   method = c(\"stratified\", \"random\", \"top\"),   save_to_file = FALSE,   file = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data data frame containing BirdNET output. Relevant columns (e.g., common name, confidence, datetime) automatically detected birdnet_detect_columns. n Integer. Number observations subsample per species. method Character. Subsampling method use. One : \"stratified\" Samples evenly across confidence score strata (0.1 1 0.05 bins). \"random\" Randomly samples n observations per species. \"top\" Selects top n observations highest confidence per species. Defaults \"stratified\". save_to_file Logical. TRUE, saves output CSV file. Defaults FALSE. Automatically set TRUE file provided. file Character NULL. File path save output CSV. NULL save_to_file = TRUE, saves \"subsampled_data.csv\" working directory.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data frame containing subsampled observations.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_subsample(data = my_data, n = 300, method = \"stratified\") birdnet_subsample(data = my_data, n = 100, method = \"top\", save_to_file = TRUE, file = \"top_samples.csv\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server logic for BirdNET audio validation platform — birdnet_validation_server","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"Defines server-side logic BirdNET audio validation Shiny app within birdnetTools package. function handles file imports, audio directory selection, spectrogram generation, interactive table editing, audio playback.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"","code":"birdnet_validation_server(input, output, session)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"input Shiny input object. output Shiny output object. session Shiny session object.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"Called side effects within shinyApp context.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server logic for BirdNET audio validation platform — birdnet_validation_server","text":"internal server function powers interactive audio validation interface. Users can import CSV BirdNET detections, link local audio directories, view spectrograms, manually validate detections Shiny DataTable interface. Audio playback validation column editing supported.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for BirdNET audio validation platform — birdnet_validation_ui","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"Constructs user interface layout BirdNET audio validation platform within birdnetTools package. UI includes inputs file upload, audio folder selection, spectrogram settings, outputs data display spectrogram plotting.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"","code":"birdnet_validation_ui(request)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"request Internal parameter {shiny} applications. Typically set user.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"Shiny UI definition built bslib::page_sidebar().","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_validation_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"User interface for BirdNET audio validation platform — birdnet_validation_ui","text":"internal UI function called Shiny validation app launched higher-level user-facing functions. sets sidebar inputs file import settings, main panel outputs data spectrogram display.","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":null,"dir":"Reference","previous_headings":"","what":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"sample BirdNET selection table generated audio recordings collected 5 sites, John Prince Research Forest, British Columbia, Canada, May–June 2023. Recordings scheduled continuously 24 hours using duty cycle 1 minute , 4 minutes . Audio files analyzed using BirdNET GUI (model version 2.4) confidence threshold 0.1; parameters kept default values.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"","code":"example_jprf_2023"},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"example-jprf-","dir":"Reference","previous_headings":"","what":"example_jprf_2023","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"data frame 392,300 rows 14 columns. Key columns include: filepath Full path audio file detection made start Start time detection seconds end End time detection seconds scientific_name Scientific name detected species sound event common_name Common name detected species sound event confidence BirdNET-assigned confidence score (0 1) lat Latitude recording location (set -1 embedded) lon Longitude recording location (set -1 embedded) week Week number year (set -1 available) overlap Whether overlapping segments analyzed (0 = , 1 = yes) sensitivity Sensitivity parameter used detection (default = 1) min_conf Minimum confidence threshold used detection (e.g., 0.1) species_list Species list constraint used (e.g., \"None\" set) model Name BirdNET model used detection","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"https://sunnytseng.ca/","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/example_jprf_2023.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example BirdNET selection table from John Prince Research Forest — example_jprf_2023","text":"dataset useful demonstrating typical BirdNET output testing workflows involving species filtering, thresholding, temporal subsetting.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Current time — what_time","title":"Current time — what_time","text":"Returns sentence current time","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current time — what_time","text":"","code":"what_time(city = \"Vancouver\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current time — what_time","text":"city City either \"Vancouver\" \"Chemnitz\"","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current time — what_time","text":"character string","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/news/index.html","id":"birdnettools-010","dir":"Changelog","previous_headings":"","what":"birdnetTools 0.1.0","title":"birdnetTools 0.1.0","text":"Initial release! Vignette usage examples workflow","code":""}]
