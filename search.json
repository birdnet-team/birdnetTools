[{"path":"https://birdnet-team.github.io/birdnetTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 birdnetTools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sunny Tseng. Author, maintainer.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tseng S (2025). birdnetTools: Post-process, Validate, Visualize BirdNET Output. R package version 0.0.0.9000, https://birdnet-team.github.io/birdnetTools/.","code":"@Manual{,   title = {birdnetTools: Post-process, Validate, and Visualize BirdNET Output},   author = {Sunny Tseng},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://birdnet-team.github.io/birdnetTools/}, }"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"birdnettools","dir":"","previous_headings":"","what":"Post-process, Validate, and Visualize BirdNET Output","title":"Post-process, Validate, and Visualize BirdNET Output","text":"goal birdnetTools provide streamlined set tools processing, validating, visualizing output BirdNET sound analysis algorithm. package helps ecologists researchers efficiently interpret BirdNET results.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Post-process, Validate, and Visualize BirdNET Output","text":"can install development version birdnetTools GitHub :","code":"# install.packages(\"pak\") pak::pak(\"birdnet-team/birdnetTools\")"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"example-use","dir":"","previous_headings":"","what":"Example use","title":"Post-process, Validate, and Visualize BirdNET Output","text":"basic example show visualize BirdNET output data. example assumes data frame BirdNET results:","code":"library(birdnetTools)  # to read data from a local path data <- birdnet_combine(\"path/to/BirdNET/output\")  # to filter data for given species, and time range data_filtered <- birdnet_filter(data,                                  species = \"American Robin\",                                 year = 2023,                                 date_range = c(\"2023-01-01\", \"2023-12-31\"))  # to subsample dataset for validation purpose data_subsampled <- birdnet_subsample(data_filtered,                                       n = 1000,                                       method = \"stratified\")  # data visualization birdnet_heatmap(data_filtered)"},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"funding","dir":"","previous_headings":"Example use","what":"Funding","title":"Post-process, Validate, and Visualize BirdNET Output","text":"project supported Jake Holshuh (Cornell class ’69) Arthur Vining Davis Foundations. work K. Lisa Yang Center Conservation Bioacoustics made possible generosity K. Lisa Yang advance innovative conservation technologies inspire inform conservation wildlife habitats. development BirdNET supported German Federal Ministry Education Research project “BirdNET+” (FKZ 01|S22072). German Federal Ministry Environment, Nature Conservation Nuclear Safety contributes “DeepBirdDetect” project (FKZ 67KI31040E). addition, Deutsche Bundesstiftung Umwelt supports BirdNET project “RangerSound” (project 39263/01).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/index.html","id":"partners","dir":"","previous_headings":"Example use","what":"Partners","title":"Post-process, Validate, and Visualize BirdNET Output","text":"BirdNET joint effort partners academia industry. Without partnerships, project possible.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdnetTools: Post-process, Validate, and Visualize BirdNET Output — birdnetTools-package","title":"birdnetTools: Post-process, Validate, and Visualize BirdNET Output — birdnetTools-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnetTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdnetTools: Post-process, Validate, and Visualize BirdNET Output — birdnetTools-package","text":"Maintainer: Sunny Tseng sunnyyctseng@gmail.com (ORCID)","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"Extracts parses datetime information filenames specified column, adds several useful time-related columns (e.g., date, year, month, hour) input data frame.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"birdnet_add_datetime(data, col = filepath, tz = \"UTC\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data data frame containing BirdNET output. col Unquoted name column contains file paths (e.g., File). tz Time zone assign parsing datetime. Defaults \"UTC\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"data frame additional columns: datetime POSIXct datetime parsed filename. date Date portion datetime. year, month, mday, yday, hour, minute Individual datetime components.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_add_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add datetime-related columns from BirdNET output filenames — birdnet_add_datetime","text":"","code":"if (FALSE) { # \\dontrun{ combined_data <- birdnet_combine(\"path/to/BirdNET/output\") data_with_time <- birdnet_add_datetime(combined_data, col = File) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and standardize column names — birdnet_clean_names","title":"Clean and standardize column names — birdnet_clean_names","text":"function standardizes column names BirdNET output-like dataframe. renames columns match patterns like \"start\", \"end\", \"scientific\", \"common\", \"file\", \"confidence\" (case-insensitive) consistent names: \"start\", \"end\", \"scientific_name\", \"common_name\", \"filepath\", \"confidence\".","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"birdnet_clean_names(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and standardize column names — birdnet_clean_names","text":"data data frame containing output BirdNET similar data timestamp species information.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and standardize column names — birdnet_clean_names","text":"data frame renamed columns.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and standardize column names — birdnet_clean_names","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   Start.Time = 1:3,   End.Time = 4:6,   Scientific = c(\"Turdus migratorius\", \"Cyanocitta cristata\", \"Corvus brachyrhynchos\"),   Common = c(\"American Robin\", \"Blue Jay\", \"American Crow\"),   File.Name = c(\"file1.wav\", \"file2.wav\", \"file3.wav\"),   Confidence.Score = c(0.95, 0.87, 0.90) ) birdnet_clean_names(df) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Group BirdNET output files — birdnet_combine","title":"Group BirdNET output files — birdnet_combine","text":"Reads combines multiple BirdNET output CSV files specified directory single data frame. Files named \"analysis_params\" \"CombinedTable\" specified directory automatically excluded.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group BirdNET output files — birdnet_combine","text":"","code":"birdnet_combine(path)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group BirdNET output files — birdnet_combine","text":"path Character string. directory path containing BirdNET output .csv files. Can include subdirectories.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group BirdNET output files — birdnet_combine","text":"data frame containing combined BirdNET detection data valid CSV files, columns: Start (s): Detection start time seconds. End (s): Detection end time seconds. Scientific name: Scientific name detected species. Common name: Common name detected species. Confidence: Confidence score detection. File: Name file detection found.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group BirdNET output files — birdnet_combine","text":"function useful aggregating BirdNET output batch runs large-scale deployments. uses fixed column specification ensure consistent parsing file. Files incompatible formats errors skipped names printed warning.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group BirdNET output files — birdnet_combine","text":"","code":"if (FALSE) { # \\dontrun{ combined_data <- group_BirdNET_output(\"path/to/BirdNET/output\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"Drop datetime-related columns BirdNET output","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"","code":"birdnet_drop_datetime(data)"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data data frame containing BirdNET output, datetime related columns present.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_drop_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop datetime-related columns from BirdNET output — birdnet_drop_datetime","text":"data frame datime related columns removed.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"Applies one common filtering operations BirdNET output dataframe. includes filtering species name, confidence threshold, year, date range, hour range. function also records filtering parameters attribute (filter_log) attached returned dataframe, allowing users inspect filters applied.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"birdnet_filter(   data,   species = NULL,   threshold = NULL,   year = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"data data frame containing BirdNET output. Column names standardized internally using birdnet_clean_names(). species Character vector. One common names species filter (e.g., c(\"Swainson's Thrush\", \"American Robin\")). threshold Numeric. Confidence threshold (0 1); rows confidence value excluded. year Integer vector integers. Year(s) retain data (e.g., c(2024:2025)). min_date, max_date Character strings Date objects specifying date range (inclusive). one provided, filtering open-ended side (e.g., \"2025-06-09\"). hour Integer vector 0 23 specifying hours day keep (e.g., c(4:7)).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"filtered data frame \"filter_log\" attribute containing filtering parameters used.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter BirdNET output data by species, confidence, date, and time — birdnet_filter","text":"","code":"if (FALSE) { # \\dontrun{ filtered <- birdnet_filter(data,   species = \"Swainson's Thrush\",   threshold = 0.75 ) attr(filtered, \"filter_log\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"function generates heatmap showing daily activity pattern specified species detected BirdNET output data. function optionally filters detections confidence threshold displays activity levels (number detections) across time.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"birdnet_heatmap(   data,   species = NULL,   threshold = NULL,   min_date = NULL,   max_date = NULL,   hour = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"data data frame containing BirdNET output. Must include columns time species information. Column names standardized internally using birdnet_clean_names(). species Character. common name species visualize. threshold Numeric NULL. Optional confidence threshold (0–1) used filter detections. NULL, threshold filtering applied. min_date Character NULL. minimum date include heatmap. NULL, earliest date used. max_date Character NULL. maximum date include heatmap. NULL, latest date used. hour Integer vector 0 23 specifying hours day keep (e.g., c(4:7)).","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"ggplot heatmap showing number detections hour date.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap of BirdNET detections by hour and date — birdnet_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_heatmap(data = birdnet_output, species = \"Swainson's Thrush\", threshold = 0.7) } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsample BirdNET detections by species — birdnet_subsample","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"Subsamples specified number observations given species BirdNET output dataset using one three methods: stratified, random, top confidence. Optionally saves result CSV file.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"birdnet_subsample(   data,   n,   method = c(\"stratified\", \"random\", \"top\"),   save_to_file = FALSE,   file = NULL )"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data data frame containing BirdNET output. must include least columns common_name confidence. n Integer. Total number observations subsample species data. method Character string. Subsampling method use. One \"stratified\", \"random\", \"top\": \"stratified\" Samples across confidence score strata (0.1 1 0.05 bins) evenly. \"random\" Randomly samples n observations. \"top\" Selects top n observations highest confidence. save_to_file Logical. TRUE, saves output data frame file named \"subsampled_data.csv\" working directory. Default FALSE. Automatically set TRUE path defined. file Character string NULL. File path save output. NULL save_to_file = TRUE, file saved \"subsampled_data.csv\" working directory.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"data frame containing subsampled observations.","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/birdnet_subsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsample BirdNET detections by species — birdnet_subsample","text":"","code":"if (FALSE) { # \\dontrun{ birdnet_subsample(data = my_data, species = \"American Robin\", n = 300, method = \"stratified\") } # }"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Current time — what_time","title":"Current time — what_time","text":"Returns sentence current time","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current time — what_time","text":"","code":"what_time(city = \"Vancouver\")"},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current time — what_time","text":"city City either \"Vancouver\" \"Chemnitz\"","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current time — what_time","text":"character string","code":""},{"path":"https://birdnet-team.github.io/birdnetTools/reference/what_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Current time — what_time","text":"","code":"what_time() #> [1] \"Mmhm! It is 05:51 now!\""}]
