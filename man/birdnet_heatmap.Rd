% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/birdnet_heatmap.R
\name{birdnet_heatmap}
\alias{birdnet_heatmap}
\title{Create a heatmap of BirdNET detections by hour and date}
\usage{
birdnet_heatmap(
  data,
  species = NULL,
  threshold = NULL,
  min_date = NULL,
  max_date = NULL,
  hour = NULL
)
}
\arguments{
\item{data}{A data frame containing BirdNET output. Must include columns related to detection times,
species names, confidence scores, and file paths. Column names will be standardized internally
using \code{\link[=birdnet_clean_names]{birdnet_clean_names()}}.}

\item{species}{Character scalar or vector specifying the common name(s) of species to visualize.
If \code{NULL}, no species filtering is applied.}

\item{threshold}{Numeric scalar between 0 and 1, data frame with columns \code{scientific_name} and
\code{threshold}, or \code{NULL}. If numeric, filters detections below this confidence value. If a data frame,
species-specific thresholds are applied. If \code{NULL}, no threshold filtering is done.}

\item{min_date}{Character scalar specifying the earliest date to include (format \code{"YYYY-MM-DD"}).
If \code{NULL}, no lower date limit is applied.}

\item{max_date}{Character scalar specifying the latest date to include (format \code{"YYYY-MM-DD"}).
If \code{NULL}, no upper date limit is applied.}

\item{hour}{Integer vector of hours (0â€“23) specifying which hours of the day to include.
If \code{NULL}, all hours are included.}
}
\value{
A \code{ggplot} object showing a heatmap of detections by date (x-axis) and hour (y-axis).
The fill color corresponds to detection counts.
}
\description{
Generates a heatmap visualizing the daily activity pattern of a specified species
detected in BirdNET output data. The heatmap shows detection counts by hour and date,
optionally filtered by species, confidence threshold, date range, and hours of the day.
}
\examples{
\dontrun{
birdnet_heatmap(
  data = birdnet_output,
  species = "Swainson's Thrush",
  threshold = 0.7,
  min_date = "2024-06-01",
  max_date = "2024-06-30",
  hour = 4:7
)
}
}
